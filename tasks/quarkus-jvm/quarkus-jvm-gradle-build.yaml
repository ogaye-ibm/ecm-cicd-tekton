---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: quarkus-jvm-gradle-build
spec:
  workspaces:
  - name: src-build-workspace
    description: The gradle project workspace.
  params:
  - name: git-url
  - name: git-revision
  - name: jdk-image
    description: Java image for src build
    default: 'registry.access.redhat.com/ubi8/openjdk-17'
  - name: BUILDER_IMAGE
    description: Buildah, location of the builder image.
    default: 'quay.io/buildah/stable:v1.23.1'
  - name: DOCKERFILE
    description: Path to the Dockerfile to build.
    default: 'src/main/docker/Dockerfile.jvm'
  - name: CONTEXT
    description: Path to the directory to use as context.
    default: .
  - name: TLSVERIFY
    description: Verify the TLS on the registry endpoint (for push/pull to a non-TLSregistry)
    default: 'false'
  - name: IMAGE
  - name: IMAGE_TAG
  - name: IMAGE_REGISTRY
  steps:
  - name: source-to-image
    image: $(inputs.params.jdk-image)
    workingDir: /workspace/src-build-workspace
    command: ["/bin/bash"]
    args:
      - -c
      - |
        set -e
        pwd
        ./gradlew build -x test --no-daemon
        ls -l
        echo "*********************"
        ls -l ./build
        echo "*********************"
        ls -l ./build/libs
  - name: build-and-push-image
    image: $(inputs.params.BUILDER_IMAGE)
    workingDir: /workspace/src-build-workspace
    command: ["/bin/bash"]
    args:
      - -c
      - |
        set -e
        echo =======================================
        pwd
        ls -l
        NEW_IMAGE_ID="$(inputs.params.IMAGE_REGISTRY)/$(inputs.params.IMAGE):$(inputs.params.IMAGE_TAG)"
        echo " ***** Building Image $NEW_IMAGE_ID ..."
        buildah build --isolation=chroot --tls-verify="$(inputs.params.TLSVERIFY)" --layers -f "$(inputs.params.DOCKERFILE)" -t "$NEW_IMAGE_ID" "$(inputs.params.CONTEXT)"
        echo " ***** Pushing Image $NEW_IMAGE_ID to Registry... "
        buildah push --tls-verify="$(inputs.params.TLSVERIFY)" "$NEW_IMAGE_ID" "docker://$NEW_IMAGE_ID"
        echo "NEW_IMAGE_ID=$NEW_IMAGE_ID" >> /workspace/env-config
        echo " ---------------------------------------------"
        echo " ***** Task build-image completed sucessfully."
        echo " ---------------------------------------------"
    securityContext:
      #privileged: true
      runAsUser: 0
    env:
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace


